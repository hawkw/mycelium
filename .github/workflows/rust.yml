name: CI

on: [push]

jobs:
  build-x64:
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rust-src, llvm-tools-preview
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      id: toolcache
      with:
        path: _devtools
        key: devtools-${{ runner.os }}-v0
    - name: install dev env
      if: steps.toolcache.outputs.cache-hit != 'true'
      uses: actions-rs/cargo@v1.0.1
      with:
        command: dev-env
        args: --root=_devtools
    - run: echo "::add-path::_devtools/bin"
    - name: x86_64 boot image
      uses: actions-rs/cargo@v1.0.1
      with:
        command: bootimage-x64

  test-x64:
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rust-src, llvm-tools-preview
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      id: toolcache
      with:
        path: _devtools
        key: devtools-${{ runner.os }}-v0
    - name: install dev env
      if: steps.toolcache.outputs.cache-hit != 'true'
      uses: actions-rs/cargo@v1.0.1
      with:
        command: dev-env
        args: --root=_devtools
    - run: echo "::add-path::_devtools/bin"
    - name: install qemu
      run: sudo apt-get update && sudo apt-get install qemu
    - name: run tests
      uses: actions-rs/cargo@v1.0.1
      with:
        command: test-x64

  clippy-x64:
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rust-src, llvm-tools-preview, clippy
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      id: toolcache
      with:
        path: _devtools
        key: devtools-${{ runner.os }}-v0
    - name: install dev env
      if: steps.toolcache.outputs.cache-hit != 'true'
      uses: actions-rs/cargo@v1.0.1
      with:
        command: dev-env
        args: --root=_devtools
    - run: echo "::add-path::_devtools/bin"
    - name: rust-clippy-check
      uses: actions-rs/clippy-check@v1.0.5
      with:
        name: clippy-x64
        token: ${{ secrets.GITHUB_TOKEN }}
        args: -Z build-std=core,alloc --target=x86_64-mycelium.json --all-features

  test-host:
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
    - uses: actions/checkout@v2
    - name: run host tests
      uses: actions-rs/cargo@v1.0.1
      with:
        command: test
        args: --all --all-features

  clippy-host:
    runs-on: ubuntu-latest
    needs: test-host
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: clippy
    - uses: actions/checkout@v2
    - name: rust-clippy-check
      uses: actions-rs/clippy-check@v1.0.5
      with:
        name: clippy-host
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
