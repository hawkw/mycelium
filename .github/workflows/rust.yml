name: CI

on: [push]

jobs:
  check-host:
    name: cargo check (host)
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions/checkout@v2
    - name: run cargo check
      uses: actions-rs/cargo@v1.0.1
      with:
        command: check
        args: --all --all-features

  clippy-host:
    name: cargo clippy (host)
    runs-on: ubuntu-latest
    needs: check-host
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: clippy
        override: true
    - uses: actions/checkout@v2
    - name: run clippy
      uses: actions-rs/clippy-check@v1.0.5
      with:
        name: clippy-host
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features

  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rustfmt
        override: true
    - uses: actions/checkout@v2
    - name: run rustfmt
      uses: actions-rs/cargo@v1.0.1
      with:
        command: fmt
        args: --all -- --check

  test-host:
    runs-on: ubuntu-latest
    name: cargo test (host)
    needs: check-host
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions/checkout@v2
    - name: run host tests
      uses: actions-rs/cargo@v1.0.1
      with:
        command: test
        args: --all --all-features

  check-x64:
    name: cargo check (cross x64)
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rust-src, llvm-tools-preview
        override: true
    - uses: actions/checkout@v2
    - name: run cargo check
      uses: actions-rs/cargo@v1.0.1
      with:
        command: check
        args: -Z build-std=core,alloc --target=x86_64-mycelium.json --all-features

  clippy-x64:
    name: cargo clippy (cross x64)
    needs: check-x64
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rust-src, llvm-tools-preview, clippy
        override: true
    - uses: actions/checkout@v2
    - name: run cargo clippy
      uses: actions-rs/clippy-check@v1.0.5
      with:
        name: clippy-x64
        token: ${{ secrets.GITHUB_TOKEN }}
        args: -Z build-std=core,alloc --target=x86_64-mycelium.json --all-features

  build-x64:
    name: cargo bootimage (cross x64)
    runs-on: ubuntu-latest
    needs: check-x64
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rust-src, llvm-tools-preview
        override: true
    - name: install cargo-bootimage
      uses: actions-rs/install@v0.1.2
      with:
        crate: bootimage
        version: latest
        use-tool-cache: true
    - uses: actions/checkout@v2
    - name: x86_64 boot image
      uses: actions-rs/cargo@v1.0.1
      with:
        command: bootimage-x64

  test-x64:
    name: cargo test (cross x64)
    runs-on: ubuntu-latest
    needs: check-x64
    steps:
    - name: install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: rust-src, llvm-tools-preview
        override: true
    - name: install cargo-bootimage
      uses: actions-rs/install@v0.1.2
      with:
        crate: bootimage
        version: latest
        use-tool-cache: true
    - uses: actions/checkout@v2
    - name: install qemu
      run: |
        sudo apt-get update
        sudo apt-get install qemu-system-x86
    - name: run tests
      uses: actions-rs/cargo@v1.0.1
      with:
        command: test-x64

