#!/usr/bin/env bash
# Run loom tests.

set -euo pipefail

bindir=$( cd "${BASH_SOURCE[0]%/*}" && pwd )
rootdir=$( cd "$bindir"/.. && pwd )

# shellcheck source=_util.sh
. "$bindir"/_util.sh

cd "$rootdir"

nextest_profile="loom"
if [[ "${GITHUB_ACTION:-}" ]]; then
    status "Detected" "GitHub Actions; using loom-ci profile"
    nextest_profile="loom-ci"
fi

# assume `cargo nextest` is present
testcmd=(cargo nextest run --cargo-profile loom --profile "${nextest_profile}")

if [[ "${LOOM_NO_NEXTEST:-}" ]]; then
    testcmd=(cargo test --profile loom)
elif ! cargo --list | grep -q "nextest"; then
    err "missing cargo-nextest executable"
    if confirm "      install it?"; then
        cargo install cargo-nextest
    else
        echo "okay, using cargo test"
        testcmd=(cargo test --profile loom)
    fi
fi

export RUSTFLAGS="--cfg loom ${RUSTFLAGS:-}"
export LOOM_LOG="${LOOM_LOG:-mycelium=trace,maitake=trace,cordyceps=trace,debug}"
export LOOM_LOCATION=true
export LOOM_MAX_PREEMPTIONS="${LOOM_MAX_PREEMPTIONS:-3}"

status "Running" "loom tests, LOOM_LOG=${LOOM_LOG}, LOOM_LOCATION=${LOOM_LOCATION}, LOOM_MAX_PREEMPTIONS=${LOOM_MAX_PREEMPTIONS}"

if [[ "${LOOM_CHECKPOINT_FILE:-}" ]]; then
    export LOOM_CHECKPOINT_FILE="${LOOM_CHECKPOINT_FILE:-}"
    export LOOM_CHECKPOINT_INTERVAL="${LOOM_CHECKPOINT_INTERVAL:-100}"
    status "Saving" "checkpoints to ${LOOM_CHECKPOINT_FILE} every ${LOOM_CHECKPOINT_INTERVAL} iterations"
fi

# if the loom tests fail, we still want to be able to print the checkpoint
# location before exiting.
set +e

# run loom tests
"${testcmd[@]}" --lib "$@"
status="$?"

if [[ "${LOOM_CHECKPOINT_FILE:-}" ]]; then
    status "Checkpoints" "saved to ${LOOM_CHECKPOINT_FILE}"
fi

exit "$status"