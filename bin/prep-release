#!/usr/bin/env bash
usage="Prepares to release a mycelium crate.

USAGE:
    $(basename "$0") [FLAGS] <CRATE> <VERSION>

FLAGS:
    -h, --help      Show this help text and exit.
    -v, --verbose   Enable verbose output."

set -euo pipefail

cd "$(dirname "$0")"/..

err() {
    echo -e "\e[31m\e[1merror:\e[0m $@" 1>&2;
}

note() {
    echo -e "\e[31m\e[1mnote:\e[0m $@" 1>&2;
}

status() {
    local width=12
    printf "\e[32m\e[1m%${width}s\e[0m %s\n" "$1" "$2"
}

for arg in "$@"
do
    case "$arg" in
    -h|--help)
        echo "$usage"
        exit 0
        ;;
    -v|--verbose)
        verbose=1
        ;;
    -*)
        err "unknown flag $arg"
        echo "$usage"
        exit 1
        ;;
    *) # crate or version
        if [[ -z "${crate+crate}" ]]; then
            crate="$arg"
        elif [[ -z "${version+version}" ]]; then
            version="$arg"
        else
            err "unknown positional argument \"$arg\""
            echo "$usage"
            exit 1
        fi
        ;;
    esac
done

if [[ "${verbose+verbose}" ]]; then
    set -x
fi


if [[ -z "${version+version}" ]]; then
    err "no version specified!"
    errexit=1
fi

if [[ "${crate+crate}" ]]; then
    tag="$crate-v$version"
else
    err "no crate specified!"
    errexit=1
fi

if [[ "${errexit+errexit}" ]]; then
    echo "$usage"
    exit 1
fi

mycoprefix='mycelium-';
if [[ -d $crate ]]; then
    path="$crate"
elif [[ -d "${crate#$mycoprefix}" ]]; then
    path="${crate#$mycoprefix}"
else
    err "unknown crate $crate"
    echo "$usage"
    exit 1
fi

if ! [[ -x "$(command -v git-cliff)" ]]; then
    err "missing git-cliff executable"
    read -r -p "install it? [Y/n] " input

    case "$input" in
        [yY][eE][sS]|[yY])
            cargo install git-cliff
            ;;
        [nN][oO]|[nN])
            echo "okay, exiting"
            exit 1
            ;;
        *)
            err "invalid input $input"
            exit 1
            ;;
    esac
fi

status "Updating" "$crate version to $version"
sed -i \
    "/\[package\]/,/\[.*dependencies\]/{s/^version = \".*\"/version = \"$version\"/}" \
    "${path}/Cargo.toml"

status "Updating" "changelog for $crate $version"

git-cliff \
    --include-path "${path}/**" \
    -o "${path}/CHANGELOG.md" \
     --config cliff.toml \
     --tag "$tag"

status "Ready" "to prepare release commit!"
echo ""

git add "${path}/Cargo.toml"
git add "${path}/CHANGELOG.md"
git diff --staged

echo ""

read -r -p "commit it? [Y/n] " input

case "$input" in
    [yY][eE][sS]|[yY])
        git commit -sS -m "chore: prepare to release ${crate} ${version}"
        git push -u origin $(git branch-name)
        ;;
    [nN][oO]|[nN])
        echo "okay, exiting"
        exit 0
        ;;
    *)
        err "invalid input $input"
        exit 1
        ;;
esac